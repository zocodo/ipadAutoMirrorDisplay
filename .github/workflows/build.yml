name: Build & Release AutoMirrorDisplay

permissions:
  contents: write
  packages: write

on:
  push:
    # 只有符合 v* 格式的 tag 才会触发 Release
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    outputs:
      deb-path: ${{ steps.rename.outputs.deb }}

    steps:
      - uses: actions/checkout@v3

      - name: Install deps
        run: brew install dpkg ldid

      - name: Clone Theos
        run: git clone --recursive https://github.com/theos/theos.git

      - name: Build .deb
        run: |
          export THEOS=${{ github.workspace }}/theos
          make package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=rootless INTERNAL_PACKAGE_METHOD=dpkg-deb

      - name: Rename .deb
        id: rename
        run: |
          # 取出 tag 名称，比如 v1.0.0
          TAG=${GITHUB_REF##*/}
          # 原始文件
          SRC=$(ls packages/*.deb)
          # 新文件名
          DST="AutoMirrorDisplay-${TAG}.deb"
          mv "$SRC" "packages/${DST}"
          echo "::set-output name=deb::packages/${DST}"

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: AutoMirrorDisplay-${{ github.ref##*/ }}.deb
          path: ${{ steps.rename.outputs.deb }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download .deb artifact
        uses: actions/download-artifact@v4
        with:
          name: AutoMirrorDisplay-${{ github.ref##*/ }}.deb

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref##*/ }}
          release_name: AutoMirrorDisplay ${{ github.ref##*/ }}
          files: AutoMirrorDisplay-${{ github.ref##*/ }}.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
