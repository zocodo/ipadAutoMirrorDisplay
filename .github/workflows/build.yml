name: Build & Release AutoMirror

# 提升权限以允许创建 Release
permissions:
  contents: write

on:
  push:
    # branches: [main]
    # 仅当推送 tag（如 v1.2.3）时触发 release
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    outputs:
      deb-path: ${{ steps.rename.outputs.deb }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install build deps
        run: |
          brew install dpkg ldid xz dos2unix
          sudo xcode-select -s /Applications/Xcode.app

      - name: Setup Theos
        run: |
          git clone --recursive https://github.com/theos/theos.git
          mkdir -p theos/sdks
          # 只下载 iOS 16.5 SDK
          curl -LO https://github.com/theos/sdks/raw/master/iPhoneOS16.5.sdk
          mv iPhoneOS16.5.sdk theos/sdks/

          # 创建符号链接
          ln -sf /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/System/Library/Frameworks/UIKit.framework/Headers/* theos/sdks/iPhoneOS16.5.sdk/System/Library/Frameworks/UIKit.framework/Headers/

      - name: Convert line endings
        run: |
          dos2unix control
          dos2unix auto-display-mirror-mode.plist

      - name: Build .deb with dpkg-deb
        env:
          THEOS: ${{ github.workspace }}/theos
          SDKVERSION: 16.5
          THEOS_PACKAGE_SCHEME: rootless
          THEOS_PLATFORM_SDK_ROOT: ${{ github.workspace }}/theos/sdks/iPhoneOS16.5.sdk
          THEOS_PLATFORM_SDK_VERSION: 16.5
          THEOS_PLATFORM_SDK_NAME: iPhoneOS
          THEOS_PLATFORM_SDK_PATH: ${{ github.workspace }}/theos/sdks/iPhoneOS16.5.sdk
          THEOS_VERBOSE: 1
          TARGET_OS_IPHONE: 1
          TARGET_OS_IOS: 1
        run: |
          make package FINALPACKAGE=1 \
               THEOS_PACKAGE_SCHEME=rootless \
               INTERNAL_PACKAGE_METHOD=dpkg-deb \
               THEOS_VERBOSE=1 \
               TARGET_OS_IPHONE=1 \
               TARGET_OS_IOS=1

      - name: Rename .deb
        id: rename
        run: |
          TAG="$GITHUB_REF_NAME"
          SRC=$(ls packages/*.deb)
          DST="AutoMirror-${TAG}.deb"
          mv "$SRC" "packages/${DST}"
          echo "deb=packages/${DST}" >> $GITHUB_OUTPUT

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: AutoMirror-${{ github.ref_name }}.deb
          path: ${{ steps.rename.outputs.deb }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download .deb artifact
        uses: actions/download-artifact@v4
        with:
          name: AutoMirror-${{ github.ref_name }}.deb

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: AutoMirror ${{ github.ref_name }}
          files: AutoMirror-${{ github.ref_name }}.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
